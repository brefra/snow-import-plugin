#
# Servicenow.ini
#
# Author : Herve Jouin
#
# This is a sample of tha property file used by the org.archicontribs.servicenow plugin
#
# https://github.com/archi-contribs/snow-import-plugin
#
# /!\ Please be carrefull, this file is case sensitive
#

    ## Plugin version:
    ## ---------------
    ## To avoid configuration errors du to changes in the configuration file between plugin versions,
    ## the plugin checks the version of the ini file.
    ##
SNowPlugin.version  = 1.7

    ##
    ## logfile properties:
    ## -------------------
    ## Used to manage the log file.
    ##
    ## The plugin uses Log4J to generate its log file, so any Log4J property may be used.
    ##
log4j.rootLogger = ALL, SNowPlugin

log4j.appender.SNowPlugin                          = org.apache.log4j.FileAppender
log4j.appender.SNowPlugin.ImmediateFlush           = true
log4j.appender.SNowPlugin.Append                   = false
log4j.appender.SNowPlugin.encoding                 = UTF-8
log4j.appender.SNowPlugin.File                     = E:\\---archi\\archimate-import_servicenow.log
log4j.appender.SNowPlugin.layout                   = org.apache.log4j.PatternLayout
log4j.appender.SNowPlugin.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %4L:%-20.20C{1} - %m%n

    ##
    ## Proxy properties:
    ## -----------------
    ## Used to send the http requests through a proxy.
    ##      http.proxyHost     = name or ip                specifies the name or ip of the proxy
    ##      http.proxyPort     = port                      specifies the tcp port of the proxy
    ##      http.proxyUser     = username                  specifies the credentials to send to the proxy
    ##      http.proxyPassword = password
    ##
#http.proxyHost     = 
#http.proxyPort     = 
#http.proxyUser     = 
#http.proxyPassword = 

    ##
    ## ServiceNow properties:
    ## ----------------------
    ## Used to specify how to retrieve data from theServiceNow website.
    ##      servicenow.site          = URL             specifies the URL of ServiceNow web site
    ##      servicenow.user          = username        specifies the credentials to send to ServiceNow
    ##      servicenow.pass          = password
    ##      servicenow.sysparm_limit = nb              specifies the maximum number of CIs to retrieve
    ##                                                    /!\ Please note that if not specified or if zero,
    ##                                                        then ServiceNow automatically limits itself to
    ##                                                        10.000 objects without error message.
    ##
servicenow.site          = https://xxxxx.service-now.com
servicenow.user          = your_ServiceNow_account
servicenow.pass          = your_ServiceNow_password
servicenow.sysparm_limit = 1000000

    ##
    ## Archi elements properties:
    ## --------------------------
    ## The following properties specify how ServiceNow CIs will be mapped with Archi elements.
    ##
    ## These SerciceNow CIs are retrieved from the cmdb_ci_* tables.
    ##
    ## Properties:
    ## -----------
    ## The properties are under the form:
    ##     - archi.elements.<keyword>.<caracterstic> = value
    ##     - archi.elements.<keyword>.property.<property name> = value
    ##
    ## Where:
    ##     - <keyword> is any keyword you wish. It should ideally represent the data you're getting from ServiceNow.
    ##             - you may use the * wildcard to create default values for all ServiceNow tables.
    ##             - This default value can, of course, be overriden for each of the individual tables.
    ##     - <caracteristic> is the caracteristic to set in the Archi elements. It can be:
    ##             - snow_table    the name of the ServiceNow table to get CIs from.
    ##             - import_mode   to specify how the plugin will behave with the corresponding ServiceNow table (cf. import mode below)
    ##             - archi_class   to specify the Archi class to be used when the Archi element is created (this plugin do not change the class of existing Archi elements)
    ##             - id            to set the element's ID (defaults to ServiceNow sys_id)
    ##             - name          to set the element's name (defaults to ServiceNow name)
    ##             - documentation to set the element's documentation (defaults to ServiceNow short_description)
    ##             - folder        to set the folder where the Archi element should be placed (defaults to Archi's default folder)
    ##             - filter        to filter the ServiceNow result (will be added to the "sysparm_query" part of the ServiceNow web service request)
    ##             - property      to set element's property
    ##     - <property name> is the name of the element's property to set
    ##     - <value> is the value to set (cf. values below)
    ##
    ## Values:
    ## -------
    ## The value may be specified using 4 different conventions:
    ##     - "xxxxxxxxx"    quoted strings are constants.
    ##                              For example: archi.elements.*.name = "this is the name"
    ##                                -> will set the name of the element to this is the name
    ##     - ${xxxxxxxx}    strings starting with a dollar sign and surrounded with brackets are variables.
    ##                                For example: archi.elements.*.property.date = ${data:dd/MM/yyyy hh/mm/ss}
    ##                                -> will set the element's property "date" to the current date and time
    ##     - xxxxxxxxxxx    simple strings (without quotes nor dollar sign) are ServiceNow fields.
    ##                              For example: archi.elements.*.id = sys_id
    ##                                 -> will set the element's ID to the sys_id field got in the ServiceNow table
    ##     - xxx/xxx/xxx    For the folder caracteristic only: will be used to construct a path to a folder where the element should be placed.
    ##                              This path should not begin with a "/"
    ##                              The root folder is the default folder for the element (ie. Technology & Physical for a Node)
    ##                              If the corresponding folder does not exist, it is automatically created.
    ##                              For example: archi.elements.*.folder = "snow plugin"/${class}
    ##                                 -> will place the elements in folder called by the name of the Archi class of the lement, itself in a folder called "snow plugin", itself in the default folder of the element.
    ##
    ## Variables:
    ## ----------
    ## The key variables that can be used are:
    ##     - ${class}               the class of the Archi element (like Node, ApplicationComponent, BusinessActor, ...)
    ##     - ${date:<format>}       the current date (the colon and the format are mandatory)
    ##     - ${id}                  the id of the element
    ##     - ${name}                the name of the element
    ##     - ${documentation}       the documentation of the element
    ##     - ${property:xxx}        the value of the property xxx of the element
    ##     - ${model:id}            the id of the model
    ##     - ${model:name}          the name of the element
    ##     - ${model:documentation} the documentation of the element
    ##     - ${model:property:xxx}  the value of the property xxx of the element
    ##
    ##
    ## Please be aware that using variables on some properties make no sens.
    ## For examples, the id property is used to match a ServiceNow CI with an Archi element, when the id property is analysed, the corresponding Archi element is not yet known.
    ##
    ## Operational status:
    ## -------------------
    ## ServiceNow CIs have got an operational status. They are tagged as operational or non operational.
    ##
    ## The plugin uses this tag to determine what to do with corresponding Archi elements:
    ##     - if operational status is operational:
    ##            - existing elements are updated
    ##            - non existing elements are created
    ##     - if operational status is non operational
    ##            - existing elements are removed
    ##
    ## Import mode:
    ## ------------
    ## The plugin manages several import modes:
    ##     - create_only            in this mode, the plugin creates new elements from operational ServiceNow CIs, but do not update nor remove existing elements
    ##     - update_only            in ths mode, the plugin updates existing elements from operational ServiceNow CIs, but do not create nor remove elements.
    ##     - create_or_update_only  in this mode, the plugin creates new elements or update existing elements from operational ServiceNow CIs, but do not remove existing elements.
    ##     - remove_only            in this mode, the plugin removes elements from non operational ServiceNow CIs, but do not create nor update existing elements.
    ##     - full                   This is the default mode: the plugin creates and updates elements from operational ServiceNow CIs, and remove elements from non operational ServiceNow CIs.
    ##

##
## Generic Archi elements properties
##
archi.elements.*.import_mode                                    = create_or_update_only
archi.elements.*.id                                             = sys_id
archi.elements.*.name                                           = name
archi.elements.*.documentation                                  = short_description
archi.elements.*.folder                                         = sys_class_name
archi.elements.*.property.date                                  = ${date:dd/MM/yyyy HH:mm/ss}
archi.elements.*.property.company                               = company#name
archi.elements.*.property.oasis_created_by                      = sys_created_by
archi.elements.*.property.oasis_created_on                      = sys_created_on
archi.elements.*.property.oasis_updated_by                      = sys_updated_by
archi.elements.*.property.oasis_updated_on                      = sys_updated_on

    ## mapping between ServiceNow CI and Archi elements

    ## Locations
archi.elements.cmdb_ci_computer_room.snow_table                 = cmdb_ci_computer_room
archi.elements.cmdb_ci_computer_room.archi_class                = "Location"
archi.elements.cmdb_ci_computer_room.folder                     = "Salles informatiques"
archi.elements.cmdb_ci_computer_room.property.hosting           = u_hosting

archi.elements.cmdb_ci_datacenter.snow_table                    = cmdb_ci_datacenter
archi.elements.cmdb_ci_datacenter.archi_class                   = "Location"
archi.elements.cmdb_ci_datacenter.folder                        = "Sites"
archi.elements.cmdb_ci_datacenter.property.hosting              = u_hosting

archi.elements.cmdb_ci_zone.snow_table                          = cmdb_ci_zone
archi.elements.cmdb_ci_zone.archi_class                         = "Location"
archi.elements.cmdb_ci_zone.folder                              = "Zones"
archi.elements.cmdb_ci_zone.property.hosting                    = u_hosting

    ## Servers
archi.elements.cmdb_ci_mainframe.snow_table                     = cmdb_ci_mainframe
archi.elements.cmdb_ci_mainframe.archi_class                    = "Node"
archi.elements.cmdb_ci_mainframe.folder                         = "Serveurs"/"Mainframe"

archi.elements.cmdb_ci_esx_server.snow_table                    = cmdb_ci_esx_server
archi.elements.cmdb_ci_esx_server.archi_class                   = "Device"
archi.elements.cmdb_ci_esx_server.folder                        = "Serveurs"/"ESX"
archi.elements.cmdb_ci_esx_server.property.cores                = cpu_count
archi.elements.cmdb_ci_esx_server.property.cpu_type             = cpu_type
archi.elements.cmdb_ci_esx_server.property.os                   = os
archi.elements.cmdb_ci_esx_server.property.ram                  = Ram
archi.elements.cmdb_ci_esx_server.property.env                  = u_fonction
archi.elements.cmdb_ci_esx_server.property.chassis_type         = chassis_type
archi.elements.cmdb_ci_esx_server.property.status               = hardware_status

archi.elements.cmdb_ci_vcenter_cluster.snow_table               = cmdb_ci_vcenter_cluster
archi.elements.cmdb_ci_vcenter_cluster.archi_class              = "Node"
archi.elements.cmdb_ci_vcenter_cluster.folder                   = "Serveurs"/"ESX"/"Clusters"

archi.elements.cmdb_ci_vcenter_server_obj.snow_table            = cmdb_ci_vcenter_server_obj
archi.elements.cmdb_ci_vcenter_server_obj.archi_class           = "Node"
archi.elements.cmdb_ci_vcenter_server_obj.folder                = "Serveurs"/"ESX"/"Vcenter"

archi.elements.cmdb_ci_aix_server.snow_table                    = cmdb_ci_aix_server
archi.elements.cmdb_ci_aix_server.archi_class                   = "Node"
archi.elements.cmdb_ci_aix_server.folder                        = "Serveurs"/"AIX"/os
archi.elements.cmdb_ci_aix_server.property.processor            = processor#display_name
archi.elements.cmdb_ci_aix_server.property.pvus_per_core        = processor#processor_mapping#pvus_per_core

archi.elements.u_cmdb_ci_lpar_server.snow_table                 = u_cmdb_ci_lpar_server
archi.elements.u_cmdb_ci_lpar_server.archi_class                = "Device"
archi.elements.u_cmdb_ci_lpar_server.folder                     = "Serveurs"/"AIX"/os/"LPAR"
archi.elements.u_cmdb_ci_lpar_server.property.cores             = cpu_count
archi.elements.u_cmdb_ci_lpar_server.property.cpu_type          = cpu_type
archi.elements.u_cmdb_ci_lpar_server.property.os                = os
archi.elements.u_cmdb_ci_lpar_server.property.ram               = Ram
archi.elements.u_cmdb_ci_lpar_server.property.env               = u_fonction
archi.elements.u_cmdb_ci_lpar_server.property.chassis_type      = chassis_type
archi.elements.u_cmdb_ci_lpar_server.property.status            = hardware_status

archi.elements.cmdb_ci_linux_server.snow_table                  = cmdb_ci_linux_server
archi.elements.cmdb_ci_linux_server.archi_class                 = "Device"
archi.elements.cmdb_ci_linux_server.folder                      = "Serveurs"/"Linux"/os
archi.elements.cmdb_ci_linux_server.property.cores              = cpu_count
archi.elements.cmdb_ci_linux_server.property.cpu_type           = cpu_type
archi.elements.cmdb_ci_linux_server.property.os                 = os
archi.elements.cmdb_ci_linux_server.property.ram                = Ram
archi.elements.cmdb_ci_linux_server.property.env                = u_fonction
archi.elements.cmdb_ci_linux_server.property.chassis_type       = chassis_type
archi.elements.cmdb_ci_linux_server.property.status             = hardware_status

archi.elements.cmdb_ci_linux_host.snow_table                    = cmdb_ci_linux_host
archi.elements.cmdb_ci_linux_host.archi_class                   = "Device"
archi.elements.cmdb_ci_linux_host.folder                        = "Serveurs"/"Linux"/os/"Hosts"
archi.elements.cmdb_ci_linux_host.property.cores                = cpu_count
archi.elements.cmdb_ci_linux_host.property.cpu_type             = cpu_type
archi.elements.cmdb_ci_linux_host.property.os                   = os
archi.elements.cmdb_ci_linux_host.property.ram                  = Ram
archi.elements.cmdb_ci_linux_host.property.env                  = u_fonction
archi.elements.cmdb_ci_linux_host.property.chassis_type         = chassis_type
archi.elements.cmdb_ci_linux_host.property.status               = hardware_status

archi.elements.cmdb_ci_win_server.snow_table                    = cmdb_ci_win_server
archi.elements.cmdb_ci_win_server.archi_class                   = "Device"
archi.elements.cmdb_ci_win_server.folder                        = "Serveurs"/"Windows"/os
archi.elements.cmdb_ci_win_server.property.cores                = cpu_count
archi.elements.cmdb_ci_win_server.property.cpu_type             = cpu_type
archi.elements.cmdb_ci_win_server.property.os                   = os
archi.elements.cmdb_ci_win_server.property.ram                  = Ram
archi.elements.cmdb_ci_win_server.property.env                  = u_fonction
archi.elements.cmdb_ci_win_server.property.chassis_type         = chassis_type
archi.elements.cmdb_ci_win_server.property.status               = hardware_status

archi.elements.u_cmdb_ci_as400_server.snow_table                = u_cmdb_ci_as400_server
archi.elements.u_cmdb_ci_as400_server.archi_class               = "Device"
archi.elements.u_cmdb_ci_as400_server.folder                    = "Serveurs"/"AS 400"
archi.elements.u_cmdb_ci_as400_server.property.cores            = cpu_count
archi.elements.u_cmdb_ci_as400_server.property.cpu_type         = cpu_type
archi.elements.u_cmdb_ci_as400_server.property.os               = os
archi.elements.u_cmdb_ci_as400_server.property.ram              = Ram
archi.elements.u_cmdb_ci_as400_server.property.env              = u_fonction
archi.elements.u_cmdb_ci_as400_server.property.chassis_type     = chassis_type
archi.elements.u_cmdb_ci_as400_server.property.status           = hardware_status

archi.elements.u_cmdb_ci_teradata_server.snow_table             = u_cmdb_ci_teradata_server
archi.elements.u_cmdb_ci_teradata_server.archi_class            = "Device"
archi.elements.u_cmdb_ci_teradata_server.folder                 = "Serveurs"/"Teradata"
archi.elements.u_cmdb_ci_teradata_server.property.cores         = cpu_count
archi.elements.u_cmdb_ci_teradata_server.property.cpu_type      = cpu_type
archi.elements.u_cmdb_ci_teradata_server.property.os            = os
archi.elements.u_cmdb_ci_teradata_server.property.ram           = Ram
archi.elements.u_cmdb_ci_teradata_server.property.env           = u_fonction
archi.elements.u_cmdb_ci_teradata_server.property.chassis_type  = chassis_type
archi.elements.u_cmdb_ci_teradata_server.property.status        = hardware_status

    ## SystemSoftware
archi.elements.cmdb_ci_app_server_domino.snow_table             = cmdb_ci_app_server_domino
archi.elements.cmdb_ci_app_server_domino.archi_class            = "SystemSoftware"
archi.elements.cmdb_ci_app_server_domino.folder                 = "Logiciels"/"Domino"
archi.elements.cmdb_ci_app_server_domino.property.env           = u_fonction
archi.elements.cmdb_ci_app_server_domino.property.tcp_port      = tcp_port

archi.elements.cmdb_ci_app_server_tomcat.snow_table             = cmdb_ci_app_server_tomcat
archi.elements.cmdb_ci_app_server_tomcat.archi_class            = "SystemSoftware"
archi.elements.cmdb_ci_app_server_tomcat.folder                 = "Logiciels"/"Tomcat"
archi.elements.cmdb_ci_app_server_tomcat.property.env           = u_fonction
archi.elements.cmdb_ci_app_server_tomcat.property.tcp_port      = tcp_port

archi.elements.cmdb_ci_app_server_websphere.snow_table          = cmdb_ci_app_server_websphere
archi.elements.cmdb_ci_app_server_websphere.archi_class         = "SystemSoftware"
archi.elements.cmdb_ci_app_server_websphere.folder              = "Logiciels"/"Websphere"
archi.elements.cmdb_ci_app_server_websphere.property.env        = u_fonction
archi.elements.cmdb_ci_app_server_websphere.property.tcp_port   = tcp_port

archi.elements.cmdb_ci_application_software.snow_table          = cmdb_ci_application_software
archi.elements.cmdb_ci_application_software.archi_class         = "SystemSoftware"
archi.elements.cmdb_ci_application_software.folder              = "Logiciels"/"Application Softwares"
archi.elements.cmdb_ci_application_software.property.env        = u_fonction
archi.elements.cmdb_ci_application_software.property.tcp_port   = tcp_port

archi.elements.cmdb_ci_db_db2_catalog.snow_table                = cmdb_ci_db_db2_catalog
archi.elements.cmdb_ci_db_db2_catalog.archi_class               = "SystemSoftware"
archi.elements.cmdb_ci_db_db2_catalog.folder                    = "Logiciels"/"DB2"/"Catalog"
archi.elements.cmdb_ci_db_db2_catalog.property.env              = u_fonction
archi.elements.cmdb_ci_db_db2_catalog.property.tcp_port         = tcp_port

archi.elements.cmdb_ci_db_db2_instance.snow_table               = cmdb_ci_db_db2_instance
archi.elements.cmdb_ci_db_db2_instance.archi_class              = "SystemSoftware"
archi.elements.cmdb_ci_db_db2_instance.folder                   = "Logiciels"/"DB2"/"Instance"
archi.elements.cmdb_ci_db_db2_instance.property.env             = u_fonction
archi.elements.cmdb_ci_db_db2_instance.property.tcp_port        = tcp_port

archi.elements.cmdb_ci_db_mssql_catalog.snow_table              = cmdb_ci_db_mssql_catalog
archi.elements.cmdb_ci_db_mssql_catalog.archi_class             = "SystemSoftware"
archi.elements.cmdb_ci_db_mssql_catalog.folder                  = "Logiciels"/"MS SQL"/"Catalog"
archi.elements.cmdb_ci_db_mssql_catalog.property.env            = u_fonction
archi.elements.cmdb_ci_db_mssql_catalog.property.tcp_port       = tcp_port

archi.elements.cmdb_ci_db_mssql_instance.snow_table             = cmdb_ci_db_mssql_instance
archi.elements.cmdb_ci_db_mssql_instance.archi_class            = "SystemSoftware"
archi.elements.cmdb_ci_db_mssql_instance.folder                 = "Logiciels"/"MS SQL"/"Instance"
archi.elements.cmdb_ci_db_mssql_instance.property.env           = u_fonction
archi.elements.cmdb_ci_db_mssql_instance.property.tcp_port      = tcp_port

archi.elements.cmdb_ci_db_mysql_catalog.snow_table              = cmdb_ci_db_mysql_catalog
archi.elements.cmdb_ci_db_mysql_catalog.archi_class             = "SystemSoftware"
archi.elements.cmdb_ci_db_mysql_catalog.folder                  = "Logiciels"/"MySQL"/"Catalog"
archi.elements.cmdb_ci_db_mysql_catalog.property.env            = u_fonction
archi.elements.cmdb_ci_db_mysql_catalog.property.tcp_port       = tcp_port

archi.elements.cmdb_ci_db_mysql_instance.snow_table             = cmdb_ci_db_mysql_instance
archi.elements.cmdb_ci_db_mysql_instance.archi_class            = "SystemSoftware"
archi.elements.cmdb_ci_db_mysql_instance.folder                 = "Logiciels"/"MySQL"/"Instance"
archi.elements.cmdb_ci_db_mysql_instance.property.env           = u_fonction
archi.elements.cmdb_ci_db_mysql_instance.property.tcp_port      = tcp_port

archi.elements.cmdb_ci_database.snow_table                      = cmdb_ci_database
archi.elements.cmdb_ci_database.archi_class                     = "SystemSoftware"
archi.elements.cmdb_ci_database.folder                          = "Logiciels"/"Database"
archi.elements.cmdb_ci_database.property.env                    = u_fonction
archi.elements.cmdb_ci_database.property.tcp_port               = tcp_port

archi.elements.u_cmdb_ci_db_datacom_catalog.snow_table          = u_cmdb_ci_db_datacom_catalog
archi.elements.u_cmdb_ci_db_datacom_catalog.archi_class         = "SystemSoftware"
archi.elements.u_cmdb_ci_db_datacom_catalog.folder              = "Logiciels"/"Datacom"/"Catalog"
archi.elements.u_cmdb_ci_db_datacom_catalog.property.env        = u_fonction
archi.elements.u_cmdb_ci_db_datacom_catalog.property.tcp_port   = tcp_port

archi.elements.u_cmdb_ci_db_datacom_instance.snow_table         = u_cmdb_ci_db_datacom_instance
archi.elements.u_cmdb_ci_db_datacom_instance.archi_class        = "SystemSoftware"
archi.elements.u_cmdb_ci_db_datacom_instance.folder             = "Logiciels"/"Datacom"/"Instance"
archi.elements.u_cmdb_ci_db_datacom_instance.property.env       = u_fonction
archi.elements.u_cmdb_ci_db_datacom_instance.property.tcp_port  = tcp_port

archi.elements.cmdb_ci_db_ora_catalog.snow_table                = cmdb_ci_db_ora_catalog
archi.elements.cmdb_ci_db_ora_catalog.archi_class               = "SystemSoftware"
archi.elements.cmdb_ci_db_ora_catalog.folder                    = "Logiciels"/"Oracle"/"Catalog"
archi.elements.cmdb_ci_db_ora_catalog.property.env              = u_fonction
archi.elements.cmdb_ci_db_ora_catalog.property.tcp_port         = tcp_port

archi.elements.cmdb_ci_db_ora_instance.snow_table               = cmdb_ci_db_ora_instance
archi.elements.cmdb_ci_db_ora_instance.archi_class              = "SystemSoftware"
archi.elements.cmdb_ci_db_ora_instance.folder                   = "Logiciels"/"Oracle"/"Instance"
archi.elements.cmdb_ci_db_ora_instance.property.env             = u_fonction
archi.elements.cmdb_ci_db_ora_instance.property.tcp_port        = tcp_port

archi.elements.u_cmdb_ci_db_oracle_schema.snow_table            = u_cmdb_ci_db_oracle_schema
archi.elements.u_cmdb_ci_db_oracle_schema.archi_class           = "SystemSoftware"
archi.elements.u_cmdb_ci_db_oracle_schema.folder                = "Logiciels"/"Oracle"/"Schema"
archi.elements.u_cmdb_ci_db_oracle_schema.property.env          = u_fonction
archi.elements.u_cmdb_ci_db_oracle_schema.property.tcp_port     = tcp_port

archi.elements.cmdb_ci_vcenter.snow_table                          = cmdb_ci_vcenter
archi.elements.cmdb_ci_vcenter.archi_class                      = "SystemSoftware"
archi.elements.cmdb_ci_vcenter.folder                              = "Logiciels"/"ESX"/"Vcenter"
archi.elements.cmdb_ci_vcenter.property.env                     = u_fonction
archi.elements.cmdb_ci_vcenter.property.tcp_port                = tcp_port

archi.elements.cmdb_ci_web_server.snow_table                    = cmdb_ci_web_server
archi.elements.cmdb_ci_web_server.archi_class                   = "SystemSoftware"
archi.elements.cmdb_ci_web_server.folder                        = "Logiciels"/"Web servers"
archi.elements.cmdb_ci_web_server.property.env                  = u_fonction
archi.elements.cmdb_ci_web_server.property.tcp_port             = tcp_port

archi.elements.u_cmdb_ci_app_server_etl.snow_table              = u_cmdb_ci_app_server_etl
archi.elements.u_cmdb_ci_app_server_etl.archi_class             = "SystemSoftware"
archi.elements.u_cmdb_ci_app_server_etl.folder                  = "Logiciels"/"ETL"
archi.elements.u_cmdb_ci_app_server_etl.property.env            = u_fonction
archi.elements.u_cmdb_ci_app_server_etl.property.tcp_port       = tcp_port

archi.elements.u_cmdb_ci_app_server_mq_series.snow_table        = u_cmdb_ci_app_server_mq_series
archi.elements.u_cmdb_ci_app_server_mq_series.archi_class       = "SystemSoftware"
archi.elements.u_cmdb_ci_app_server_mq_series.folder            = "Logiciels"/"MQ Series"
archi.elements.u_cmdb_ci_app_server_mq_series.property.env      = u_fonction
archi.elements.u_cmdb_ci_app_server_mq_series.property.tcp_port = tcp_port

archi.elements.u_cmdb_ci_db_postgre_sql_catal.snow_table        = u_cmdb_ci_db_postgre_sql_catal
archi.elements.u_cmdb_ci_db_postgre_sql_catal.archi_class       = "SystemSoftware"
archi.elements.u_cmdb_ci_db_postgre_sql_catal.folder            = "Logiciels"/"PostGreSQL"/"Catalog"
archi.elements.u_cmdb_ci_db_postgre_sql_catal.property.env      = u_fonction
archi.elements.u_cmdb_ci_db_postgre_sql_catal.property.tcp_port = tcp_port

archi.elements.u_cmdb_ci_db_teradata_catalog.snow_table         = u_cmdb_ci_db_teradata_catalog
archi.elements.u_cmdb_ci_db_teradata_catalog.archi_class        = "SystemSoftware"
archi.elements.u_cmdb_ci_db_teradata_catalog.folder             = "Logiciels"/"Teradata"/"Catalog"
archi.elements.u_cmdb_ci_db_teradata_catalog.property.env       = u_fonction
archi.elements.u_cmdb_ci_db_teradata_catalog.property.tcp_port  = tcp_port

archi.elements.u_cmdb_ci_db_teradata_instance.snow_table        = u_cmdb_ci_db_teradata_instance
archi.elements.u_cmdb_ci_db_teradata_instance.archi_class       = "SystemSoftware"
archi.elements.u_cmdb_ci_db_teradata_instance.folder            = "Logiciels"/"Teradata"/"Instance"
archi.elements.u_cmdb_ci_db_teradata_instance.property.env      = u_fonction
archi.elements.u_cmdb_ci_db_teradata_instance.property.tcp_port = tcp_port

archi.elements.cmdb_ci_cics.snow_table                          = cmdb_ci_cics
archi.elements.cmdb_ci_cics.archi_class                         = "SystemSoftware"
archi.elements.cmdb_ci_cics.folder                              = "Logiciels"/"Cics"
archi.elements.cmdb_ci_cics.property.env                        = u_fonction
archi.elements.cmdb_ci_cics.property.tcp_port                   = tcp_port

archi.elements.cmdb_ci_vmware_instance.snow_table               = cmdb_ci_vmware_instance
archi.elements.cmdb_ci_vmware_instance.archi_class              = "SystemSoftware"
archi.elements.cmdb_ci_vmware_instance.folder                   = "Logiciels"/"VMware"
archi.elements.cmdb_ci_vmware_instance.property.env             = u_fonction
archi.elements.cmdb_ci_vmware_instance.property.tcp_port        = tcp_port

    ## ApplicationComponents
archi.elements.cmdb_ci_appl.snow_table                          = cmdb_ci_appl
archi.elements.cmdb_ci_appl.archi_class                         = "ApplicationComponent"
archi.elements.cmdb_ci_appl.name                                = u_display_name
archi.elements.cmdb_ci_appl.folder                              = sys_class_name
archi.elements.cmdb_ci_appl.filter                              = sys_class_name=cmdb_ci_appl
archi.elements.cmdb_ci_appl.property.nom                        = name
archi.elements.cmdb_ci_appl.property.code_application           = u_code_appli
archi.elements.cmdb_ci_appl.property.environnement              = used_for
archi.elements.cmdb_ci_appl.property.groupe_support             = support_group#name
archi.elements.cmdb_ci_appl.property.client                     = company#name


    ## Other existing tables
#archi.elements.cmdb_ci_memory_module.snow_table        =
#archi.elements.cmdb_ci_mobile_radio.snow_table         =
#archi.elements.cmdb_ci_msd.snow_table                  =
#archi.elements.cmdb_ci_net_app_server.snow_table       =
#archi.elements.cmdb_ci_network_adapter.snow_table      =
#archi.elements.cmdb_ci_portable_radio.snow_table       =
#archi.elements.cmdb_ci_print_queue.snow_table          =
#archi.elements.cmdb_ci_printer.snow_table              =
#archi.elements.cmdb_ci_rack.snow_table                 =
#archi.elements.cmdb_ci_radio_hardware.snow_table       =
#archi.elements.cmdb_ci_service.snow_table              =
#archi.elements.cmdb_ci_snc_component.snow_table        =
#archi.elements.cmdb_ci_spkg.snow_table                 =
#archi.elements.cmdb_ci_storage_server.snow_table       =
#archi.elements.cmdb_ci_switch_port.snow_table          =
#archi.elements.cmdb_ci_terminal_network.snow_table     =
#archi.elements.cmdb_ci_transport_hardware.snow_table   =
#archi.elements.cmdb_ci_workstation_pc.snow_table       =
#archi.elements.cmdb_ci_facility_hardware.snow_table    =
#archi.elements.cmdb_ci_file_system.snow_table          =
#archi.elements.cmdb_ci_firewall_network.snow_table     =
#archi.elements.cmdb_ci_inf_software.snow_table         =
#archi.elements.cmdb_ci_ip_phone.snow_table             =
#archi.elements.cmdb_ci_ip_router.snow_table            =
#archi.elements.cmdb_ci_ip_switch.snow_table            =
#archi.elements.cmdb_ci_lb.snow_table                   =
#archi.elements.cmdb_ci_voice_hardware.snow_table       =
#archi.elements.cmdb_ci_wap_network.snow_table          =
#archi.elements.cmdb_ci_desktop_software.snow_table     =
#archi.elements.cmdb_ci_disk.snow_table                 =
#archi.elements.cmdb_ci_chassis_server.snow_table       =

    ##
    ## Archi relations properties
    ## -------------------------
    ## The following properties specify how ServiceNow relations will be mapped with Archi relations.
    ##
    ## These ServiceNow relations are all retrieved from the cmdb_rel_ci table.
    ##
    ## Properties:
    ## -----------
    ## The properties are under the form:
    ##     - archi.relations.<snow relation type>.<caracterstic> = value
    ##     - archi.relations.<snow relation type>.property.<property name> = value    
    ##
    ## Where:
    ##     - <snow relation type> is the numerical ID of the ServiceNow relation (type field of the Ser
    ##             - you may use the * wildcard to create default values for all ServiceNow relations.
    ##             - This default value can, of course, be overriden for each of the individual relation.
    ##     - <caracteristic> is the caracteristic to set in the Archi relation. It can be:
    ##             - import_mode   to specify how the plugin will behave with the corresponding ServiceNow relation (cf. import mode below)
    ##             - archi_class   to specify the Archi class to be used when the Archi relation is created (this plugin do not change the class of existing Archi elements)
    ##             - id            to set the relation's ID (defaults to ServiceNow sys_id)
    ##             - name          to set the relation's name (defaults to ServiceNow name)
    ##             - documentation to set the relation's documentation (defaults to ServiceNow short_description)
    ##             - folder        to set the relation where the Archi relation should be placed (defaults to Archi's default folder)
    ##             - filter        to filter the ServiceNow result (will be added to the "sysparm_query" part of the ServiceNow web service request)
    ##             - property      to set relation's property
    ##     - <property name> is the name of the relation's property to set
    ##     - <value> is the value to set (cf. values below)
    ##
    ## Values:
    ## -------
    ## The value may be specified using 4 different conventions:
    ##     - "xxxxxxxxx"    quoted strings are constants.
    ##                              For example: archi.relations.*.name = "this is the name"
    ##                                -> will set the name of the relation to this is the name
    ##     - ${xxxxxxxx}    strings starting with a dollar sign and surrounded with brackets are variables.
    ##                                For example: archi.relations.*.property.date = ${data:dd/MM/yyyy hh/mm/ss}
    ##                              -> will set the relation's property "date" to the current date and time
    ##     - xxxxxxxxxxx    simple strings (without quotes nor dollar sign) are ServiceNow fields.
    ##                              For example: archi.relations.*.id = sys_id
    ##                              -> will set the relation's ID to the sys_id field got in the ServiceNow table
    ##     - xxx/xxx/xxx    For the folder caracteristic only: will be used to construct a path to a folder where the relation should be placed.
    ##                              This path should not begin with a "/"
    ##                              The root folder is the default folder for the relation (ie. Technology & Physical for a Node)
    ##                              If the corresponding folder does not exist, it is automatically created.
    ##                              For example: archi.relations.*.folder = "snow plugin"/${class}
    ##                              -> will place the relations in folder called by the name of the Archi class of the relation, itself in a folder called "snow plugin", itself in the Relations folder.
    ##
    ## Variables:
    ## ----------
    ## The key variables that can be used are:
    ##     - ${class}               the class of the Archi relation (like RealizationRelationship, FlowRelationship, ...)
    ##     - ${date:<format>}       the current date (the colon and the format are mandatory)
    ##     - ${id}                  the id of the relation
    ##     - ${name}                the name of the relation
    ##     - ${documentation}       the documentation of the relation
    ##     - ${property:xxx}        the value of the property xxx of the relation
    ##     - ${model:id}            the id of the model
    ##     - ${model:name}          the name of the relation
    ##     - ${model:documentation} the documentation of the relation
    ##     - ${model:property:xxx}  the value of the property xxx of the relation
    ##
    ## Please be aware that using variables on some properties make no sens.
    ## For examples, the id property is used to match a ServiceNow relation with an Archi relation, when the id property is analysed, the corresponding Archi relation is not yet known.
    ##
    ## Operational status:
    ## -------------------
    ## ServiceNow relations have got an operational status. They are tagged as operational or non operational.
    ##
    ## The plugin uses this tag to determine what to do with corresponding Archi relations:
    ##     - if operational status is operational:
    ##            - existing relations are updated
    ##            - non existing relations are created
    ##     - if operational status is non operational
    ##            - existing relations are removed
    ##
    ## Import mode:
    ## ------------
    ## The plugin manages several import modes:
    ##     - create_only            in this mode, the plugin creates new relations from operational ServiceNow relations, but do not update nor remove existing elements
    ##     - update_only            in ths mode, the plugin updates existing relations from operational ServiceNow relations, but do not create nor remove elements.
    ##     - create_or_update_only  in this mode, the plugin creates new relations or update existing relations from operational ServiceNow relations, but do not remove existing elements.
    ##     - remove_only            in this mode, the plugin removes relations from non operational ServiceNow relations, but do not create nor update existing elements.
    ##     - full                   This is the default mode: the plugin creates and updates relations from operational ServiceNow relations, and remove elements from non operational ServiceNow relations.
    ##
    ## Relations direction:
    ## --------------------
    ## One must pay attention to the direction of the relations.
    ##
    ## Some relations must map the ServiceNow child to Archi source and the ServiceNow parent to Archi target, but some other relations must be the opposite.
    ##
    ## Relations validation:
    ## ---------------------
    ## Please be aware that the version 1.3 and below of the plugin does not check if relations are valid from an Archimate point of view.
    ##
    ## So a badly configured configuration file can lead to Archi relations that ara not valid from an Archimate point of view.
    ##


    ## relations
    ##
    ## One must choose the relation direction :
    ##      - from the child to the parent
    ##      - or from the parent to the child
    ## As a general rule, but also, relation by relation
    ##
    ## /!\ beware, ServiceNow relationships IDs may be different in your ServiceNow database
    ##
    ## /!\ the actual version of the plugin fails to get ServiceNow relationships IDs, only relationsips class IDs
    ##     therefore, it can create relationships, but not update them.
archi.relations.*.id                                         = sys_id
archi.relations.*.name                                       = type#name
archi.relations.*.source                                     = child
archi.relations.*.target                                     = parent
archi.relations.*.folder                                     = ${class}
archi.relations.*.property.strength                          = connection_strength
archi.relations.*.property.source_action                     = type#child_descriptor
archi.relations.*.property.target_action                     = type#parent_description
archi.relations.*.filter                                     = x_snsab_snow_sam_i_snow_checksumISNOTEMPTY

# "Allocated to"
#archi.relations.04180212371a200032ff8c00dfbe5d08.archi_class =

# "Runs"
archi.relations.0454da4c6f7e9940f0721cef8d3ee4b9.archi_class = "CompositionRelationship"

# "Distributes"
#archi.relations.0898719c37020100dcd48c00dfbe5d43.archi_class = 

# "Dependent of"
#archi.relations.1.archi_class                                =

# "Support"
#archi.relations.1f246bc1898bc100b3ced795d2f57a0d.archi_class = 

# "Sends the data to WebService"
archi.relations.2da380cc6f3ab944a77a2dc71e3ee49d.archi_class              = "FlowRelationship"
archi.relations.2da380cc6f3ab944a77a2dc71e3ee49d.source                   = parent
archi.relations.2da380cc6f3ab944a77a2dc71e3ee49d.target                   = child
archi.relations.2da380cc6f3ab944a77a2dc71e3ee49d.property.source_action   = type#parent_descriptor
archi.relations.2da380cc6f3ab944a77a2dc71e3ee49d.property.target_action   = type#child_description

# "Consumed by"
#archi.relations.41008aa6ef32010098d5925495c0fb94.archi_class = 

# "Sends data to"
archi.relations.4b2b24dd6f435180f0721cef8d3ee42c.archi_class  = "FlowRelationship"

# "Allocated from"
#archi.relations.51678212371a200032ff8c00dfbe5d39.archi_class = 

# "Receives a MQSeries from"
#archi.relations.778300cc6f3ab944a77a2dc71e3ee4c3.archi_class = 

# "Houses"
archi.relations.91aaac9d6f435180f0721cef8d3ee4b9.archi_class  = "AssignmentRelationship"

# "Is described in"
#archi.relations.9b98225f6fbb0500f0721cef8d3ee4fc.archi_class = 

# "Rescues"
#archi.relations.9e0e6a9f6fbb0500f0721cef8d3ee4a5.archi_class = 

# "Is hosted on"
archi.relations.a8aab4c26f395900f0721cef8d3ee44a.archi_class  = "AssignmentRelationship"
archi.relations.a8aab4c26f395900f0721cef8d3ee44a.source       = parent
archi.relations.a8aab4c26f395900f0721cef8d3ee44a.target       = child

# "Powered by"
#archi.relations.b76c6a5f6fbb0500f0721cef8d3ee4d0.archi_class = 

# "Sends a file to"
archi.relations.ca538c8c6f3ab944a77a2dc71e3ee4d2.archi_class = "FlowRelationship"

# "Used by"
#archi.relations.cb5592603751200032ff8c00dfbe5d17.archi_class = 

# "Hosted on"
archi.relations.d4b4861b3791c604f5e9d2e843990ed0.archi_class = "CompositionRelationship"

# "Contains"
archi.relations.de34b3f66f00d500f0721cef8d3ee41d.archi_class = "CompositionRelationship"

# "Connects"
#archi.relations.e9ab20dd6f435180f0721cef8d3ee4dd.archi_class = 
